"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[54831],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),u=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,x=d["".concat(i,".").concat(m)]||d[m]||s[m]||l;return n?a.createElement(x,o(o({ref:t},c),{},{components:n})):a.createElement(x,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=d;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var u=2;u<l;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5100:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>s,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var a=n(87462),r=(n(67294),n(3905));const l={sidebar_label:"ExecutionContext.evaluateHandle"},o="ExecutionContext.evaluateHandle() method",p={unversionedId:"api/puppeteer.executioncontext.evaluatehandle",id:"api/puppeteer.executioncontext.evaluatehandle",title:"ExecutionContext.evaluateHandle() method",description:"Evaluates the given function.",source:"@site/../docs/api/puppeteer.executioncontext.evaluatehandle.md",sourceDirName:"api",slug:"/api/puppeteer.executioncontext.evaluatehandle",permalink:"/next/api/puppeteer.executioncontext.evaluatehandle",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"ExecutionContext.evaluateHandle"},sidebar:"sidebar",previous:{title:"ExecutionContext.evaluate",permalink:"/next/api/puppeteer.executioncontext.evaluate"},next:{title:"ExecutionContext.frame",permalink:"/next/api/puppeteer.executioncontext.frame"}},i={},u=[{value:"Parameters",id:"parameters",level:2},{value:"Example 1",id:"example-1",level:2},{value:"Example 2",id:"example-2",level:2},{value:"Example 3",id:"example-3",level:2}],c={toc:u};function s(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"executioncontextevaluatehandle-method"},"ExecutionContext.evaluateHandle() method"),(0,r.kt)("p",null,"Evaluates the given function."),(0,r.kt)("p",null,"Unlike ",(0,r.kt)("a",{parentName:"p",href:"/next/api/puppeteer.executioncontext.evaluate"},"evaluate"),", this method returns a handle to the result of the function."),(0,r.kt)("p",null,"This method may be better suited if the object cannot be serialized (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"Map"),") and requires further manipulation."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Signature:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"class ExecutionContext {\n  evaluateHandle<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>>>;\n}\n")),(0,r.kt)("h2",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pageFunction"),(0,r.kt)("td",{parentName:"tr",align:null},"Func ","|"," string"),(0,r.kt)("td",{parentName:"tr",align:null},"The function to evaluate.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"args"),(0,r.kt)("td",{parentName:"tr",align:null},"Params"),(0,r.kt)("td",{parentName:"tr",align:null},"Additional arguments to pass into the function.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns:")),(0,r.kt)("p",null,"Promise","<",(0,r.kt)("a",{parentName:"p",href:"/next/api/puppeteer.handlefor"},"HandleFor"),"<","Awaited","<","ReturnType","<","Func",">",">",">",">"),(0,r.kt)("p",null,"A ",(0,r.kt)("a",{parentName:"p",href:"/next/api/puppeteer.jshandle"},"handle")," to the result of evaluating the function. If the result is a ",(0,r.kt)("inlineCode",{parentName:"p"},"Node"),", then this will return an ",(0,r.kt)("a",{parentName:"p",href:"/next/api/puppeteer.elementhandle"},"element handle"),"."),(0,r.kt)("h2",{id:"example-1"},"Example 1"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const context = await page.mainFrame().executionContext();\nconst handle: JSHandle<typeof globalThis> = await context.evaluateHandle(() =>\n  Promise.resolve(self)\n);\n")),(0,r.kt)("h2",{id:"example-2"},"Example 2"),(0,r.kt)("p",null,"A string can also be passed in instead of a function."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const handle: JSHandle<number> = await context.evaluateHandle('1 + 2');\n")),(0,r.kt)("h2",{id:"example-3"},"Example 3"),(0,r.kt)("p",null,"Handles can also be passed as ",(0,r.kt)("inlineCode",{parentName:"p"},"args"),". They resolve to their referenced object:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const bodyHandle: ElementHandle<HTMLBodyElement> = await context.evaluateHandle(\n  () => {\n    return document.body;\n  }\n);\nconst stringHandle: JSHandle<string> = await context.evaluateHandle(\n  body => body.innerHTML,\n  body\n);\nconsole.log(await stringHandle.jsonValue()); // prints body's innerHTML\n// Always dispose your garbage! :)\nawait bodyHandle.dispose();\nawait stringHandle.dispose();\n")))}s.isMDXComponent=!0}}]);